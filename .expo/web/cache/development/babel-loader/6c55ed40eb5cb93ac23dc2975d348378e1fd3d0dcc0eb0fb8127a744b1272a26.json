{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var genericTime = new Date();\n  genericTime.setHours(0, 0, 0, 0);\n  var today = new Date();\n  var _useState = useState(today),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var _useState3 = useState(genericTime),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedTime = _useState4[0],\n    setSelectedTime = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showDatePicker = _useState6[0],\n    setShowDatePicker = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showTimePicker = _useState8[0],\n    setShowTimePicker = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedAdvisor = _useState10[0],\n    setSelectedAdvisor = _useState10[1];\n  var advisors = [{\n    name: \"Advisor CJP\",\n    location: \"CJP\",\n    schedule: \"9:00 AM - 5:00 PM\"\n  }, {\n    name: \"Advisor CSF\",\n    location: \"CSF\",\n    schedule: \"10:00 AM - 6:00 PM\"\n  }];\n  var handleDateChange = function handleDateChange(event, date) {\n    if (date !== undefined) {\n      setSelectedDate(date);\n    }\n    setShowDatePicker(false);\n  };\n  var handleTimeChange = function handleTimeChange(event, time) {\n    if (time !== undefined) {\n      var newSelectedTime = new Date(selectedDate);\n      newSelectedTime.setHours(time.getHours(), time.getMinutes(), 0, 0);\n      setSelectedTime(newSelectedTime);\n    }\n    setShowTimePicker(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return setShowDatePicker(true);\n      },\n      style: styles.pickerBox,\n      children: [_jsx(Text, {\n        children: \"Selecciona la fecha\"\n      }), showDatePicker && _jsx(DateTimePicker, {\n        value: selectedDate,\n        mode: \"date\",\n        is24Hour: true,\n        display: \"default\",\n        onChange: handleDateChange\n      }), selectedDate.getTime() !== today.getTime() && _jsxs(Text, {\n        style: styles.selectedDateTime,\n        children: [\"Fecha seleccionada: \", selectedDate.toLocaleDateString()]\n      })]\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return setShowTimePicker(true);\n      },\n      style: styles.pickerBox,\n      children: [_jsx(Text, {\n        children: \"Selecciona la hora\"\n      }), showTimePicker && _jsx(DateTimePicker, {\n        value: selectedTime,\n        mode: \"time\",\n        is24Hour: true,\n        display: \"default\",\n        onChange: handleTimeChange\n      }), selectedTime.getTime() !== genericTime.getTime() && _jsxs(Text, {\n        style: styles.selectedDateTime,\n        children: [\"Hora seleccionada: \", selectedTime.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.advisorPicker,\n      children: [_jsx(Text, {\n        children: \"Selecciona un asesor\"\n      }), _jsx(View, {\n        style: styles.advisorButtons,\n        children: advisors.map(function (advisor, index) {\n          return _jsx(Button, {\n            title: advisor.name,\n            onPress: function onPress() {\n              return setSelectedAdvisor(advisor);\n            }\n          }, index);\n        })\n      }), selectedAdvisor && _jsxs(Text, {\n        style: styles.selectedDateTime,\n        children: [\"Asesor seleccionado: \", selectedAdvisor.name, \"\\n\", \"Ubicaci\\xF3n: \", selectedAdvisor.location, \"\\n\", \"Horario: \", selectedAdvisor.schedule]\n      })]\n    }), _jsx(Button, {\n      title: \"Enviar\",\n      onPress: function onPress() {\n        if (selectedAdvisor) {\n          console.log(\"Fecha:\", selectedDate.toLocaleDateString());\n          console.log(\"Hora:\", selectedTime.toLocaleTimeString());\n          console.log(\"Asesor:\", selectedAdvisor.name);\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  pickerBox: {\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"gray\",\n    padding: 10,\n    marginBottom: 20\n  },\n  selectedDateTime: {\n    marginTop: 10,\n    fontSize: 16\n  },\n  advisorPicker: {\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"gray\",\n    padding: 10,\n    marginBottom: 20\n  },\n  advisorButtons: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","Button","DateTimePicker","jsx","_jsx","jsxs","_jsxs","App","genericTime","Date","setHours","today","_useState","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","selectedTime","setSelectedTime","_useState5","_useState6","showDatePicker","setShowDatePicker","_useState7","_useState8","showTimePicker","setShowTimePicker","_useState9","_useState10","selectedAdvisor","setSelectedAdvisor","advisors","name","location","schedule","handleDateChange","event","date","undefined","handleTimeChange","time","newSelectedTime","getHours","getMinutes","style","styles","container","children","onPress","pickerBox","value","mode","is24Hour","display","onChange","getTime","selectedDateTime","toLocaleDateString","toLocaleTimeString","hour","minute","advisorPicker","advisorButtons","map","advisor","index","title","console","log","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","borderColor","padding","marginBottom","marginTop","fontSize","flexDirection"],"sources":["C:/Users/Usuario/Desktop/taller integra 3/Integra_3/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, Button } from \"react-native\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\n\r\nexport default function App() {\r\n  const genericTime = new Date();\r\n  genericTime.setHours(0, 0, 0, 0); // Hora genÃ©rica a las 00:00:00\r\n  const today = new Date();\r\n\r\n  const [selectedDate, setSelectedDate] = useState(today);\r\n  const [selectedTime, setSelectedTime] = useState(genericTime);\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n  const [showTimePicker, setShowTimePicker] = useState(false);\r\n  const [selectedAdvisor, setSelectedAdvisor] = useState(null);\r\n\r\n  const advisors = [\r\n    {\r\n      name: \"Advisor CJP\",\r\n      location: \"CJP\",\r\n      schedule: \"9:00 AM - 5:00 PM\",\r\n    },\r\n    {\r\n      name: \"Advisor CSF\",\r\n      location: \"CSF\",\r\n      schedule: \"10:00 AM - 6:00 PM\",\r\n    },\r\n  ];\r\n\r\n  const handleDateChange = (event, date) => {\r\n    if (date !== undefined) {\r\n      setSelectedDate(date);\r\n    }\r\n    setShowDatePicker(false);\r\n  };\r\n\r\n  const handleTimeChange = (event, time) => {\r\n    if (time !== undefined) {\r\n      // Mantener la fecha seleccionada, pero actualizar la hora\r\n      const newSelectedTime = new Date(selectedDate);\r\n      newSelectedTime.setHours(time.getHours(), time.getMinutes(), 0, 0);\r\n      setSelectedTime(newSelectedTime);\r\n    }\r\n    setShowTimePicker(false);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity onPress={() => setShowDatePicker(true)} style={styles.pickerBox}>\r\n        <Text>Selecciona la fecha</Text>\r\n        {showDatePicker && (\r\n          <DateTimePicker\r\n            value={selectedDate}\r\n            mode=\"date\"\r\n            is24Hour={true}\r\n            display=\"default\"\r\n            onChange={handleDateChange}\r\n          />\r\n        )}\r\n        {selectedDate.getTime() !== today.getTime() && (\r\n          <Text style={styles.selectedDateTime}>\r\n            Fecha seleccionada: {selectedDate.toLocaleDateString()}\r\n          </Text>\r\n        )}\r\n      </TouchableOpacity>\r\n      \r\n      <TouchableOpacity onPress={() => setShowTimePicker(true)} style={styles.pickerBox}>\r\n        <Text>Selecciona la hora</Text>\r\n        {showTimePicker && (\r\n          <DateTimePicker\r\n            value={selectedTime}\r\n            mode=\"time\"\r\n            is24Hour={true}\r\n            display=\"default\"\r\n            onChange={handleTimeChange}\r\n          />\r\n        )}\r\n        {selectedTime.getTime() !== genericTime.getTime() && (\r\n          <Text style={styles.selectedDateTime}>\r\n            Hora seleccionada: {selectedTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n          </Text>\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.advisorPicker}>\r\n        <Text>Selecciona un asesor</Text>\r\n        <View style={styles.advisorButtons}>\r\n          {advisors.map((advisor, index) => (\r\n            <Button\r\n              key={index}\r\n              title={advisor.name}\r\n              onPress={() => setSelectedAdvisor(advisor)}\r\n            />\r\n          ))}\r\n        </View>\r\n        {selectedAdvisor && (\r\n          <Text style={styles.selectedDateTime}>\r\n            Asesor seleccionado: {selectedAdvisor.name}\r\n            {\"\\n\"}UbicaciÃ³n: {selectedAdvisor.location}\r\n            {\"\\n\"}Horario: {selectedAdvisor.schedule}\r\n          </Text>\r\n        )}\r\n      </View>\r\n\r\n      <Button\r\n        title=\"Enviar\"\r\n        onPress={() => {\r\n          // Acciones con las fechas, horas y asesor seleccionados\r\n          if (selectedAdvisor) {\r\n            console.log(\"Fecha:\", selectedDate.toLocaleDateString());\r\n            console.log(\"Hora:\", selectedTime.toLocaleTimeString());\r\n            console.log(\"Asesor:\", selectedAdvisor.name);\r\n          }\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  pickerBox: {\r\n    alignItems: \"center\",\r\n    borderWidth: 1,\r\n    borderColor: \"gray\",\r\n    padding: 10,\r\n    marginBottom: 20,\r\n  },\r\n  selectedDateTime: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n  },\r\n  advisorPicker: {\r\n    alignItems: \"center\",\r\n    borderWidth: 1,\r\n    borderColor: \"gray\",\r\n    padding: 10,\r\n    marginBottom: 20,\r\n  },\r\n  advisorButtons: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAExC,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9BD,WAAW,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,IAAMC,KAAK,GAAG,IAAIF,IAAI,CAAC,CAAC;EAExB,IAAAG,SAAA,GAAwChB,QAAQ,CAACe,KAAK,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAwCrB,QAAQ,CAACY,WAAW,CAAC;IAAAU,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA4CzB,QAAQ,CAAC,KAAK,CAAC;IAAA0B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAAG,UAAA,GAA4C7B,QAAQ,CAAC,KAAK,CAAC;IAAA8B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAAG,UAAA,GAA8CjC,QAAQ,CAAC,IAAI,CAAC;IAAAkC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAArDE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAE1C,IAAMG,QAAQ,GAAG,CACf;IACEC,IAAI,EAAE,aAAa;IACnBC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEF,IAAI,EAAE,aAAa;IACnBC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAK,EAAEC,IAAI,EAAK;IACxC,IAAIA,IAAI,KAAKC,SAAS,EAAE;MACtBxB,eAAe,CAACuB,IAAI,CAAC;IACvB;IACAf,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,IAAMiB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIH,KAAK,EAAEI,IAAI,EAAK;IACxC,IAAIA,IAAI,KAAKF,SAAS,EAAE;MAEtB,IAAMG,eAAe,GAAG,IAAIlC,IAAI,CAACM,YAAY,CAAC;MAC9C4B,eAAe,CAACjC,QAAQ,CAACgC,IAAI,CAACE,QAAQ,CAAC,CAAC,EAAEF,IAAI,CAACG,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAClEzB,eAAe,CAACuB,eAAe,CAAC;IAClC;IACAf,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,OACEtB,KAAA,CAACT,IAAI;IAACiD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B3C,KAAA,CAACN,gBAAgB;MAACkD,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAM1B,iBAAiB,CAAC,IAAI,CAAC;MAAA,CAAC;MAACsB,KAAK,EAAEC,MAAM,CAACI,SAAU;MAAAF,QAAA,GAChF7C,IAAA,CAACN,IAAI;QAAAmD,QAAA,EAAC;MAAmB,CAAM,CAAC,EAC/B1B,cAAc,IACbnB,IAAA,CAACF,cAAc;QACbkD,KAAK,EAAErC,YAAa;QACpBsC,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAE,IAAK;QACfC,OAAO,EAAC,SAAS;QACjBC,QAAQ,EAAEnB;MAAiB,CAC5B,CACF,EACAtB,YAAY,CAAC0C,OAAO,CAAC,CAAC,KAAK9C,KAAK,CAAC8C,OAAO,CAAC,CAAC,IACzCnD,KAAA,CAACR,IAAI;QAACgD,KAAK,EAAEC,MAAM,CAACW,gBAAiB;QAAAT,QAAA,GAAC,sBAChB,EAAClC,YAAY,CAAC4C,kBAAkB,CAAC,CAAC;MAAA,CAClD,CACP;IAAA,CACe,CAAC,EAEnBrD,KAAA,CAACN,gBAAgB;MAACkD,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMtB,iBAAiB,CAAC,IAAI,CAAC;MAAA,CAAC;MAACkB,KAAK,EAAEC,MAAM,CAACI,SAAU;MAAAF,QAAA,GAChF7C,IAAA,CAACN,IAAI;QAAAmD,QAAA,EAAC;MAAkB,CAAM,CAAC,EAC9BtB,cAAc,IACbvB,IAAA,CAACF,cAAc;QACbkD,KAAK,EAAEjC,YAAa;QACpBkC,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAE,IAAK;QACfC,OAAO,EAAC,SAAS;QACjBC,QAAQ,EAAEf;MAAiB,CAC5B,CACF,EACAtB,YAAY,CAACsC,OAAO,CAAC,CAAC,KAAKjD,WAAW,CAACiD,OAAO,CAAC,CAAC,IAC/CnD,KAAA,CAACR,IAAI;QAACgD,KAAK,EAAEC,MAAM,CAACW,gBAAiB;QAAAT,QAAA,GAAC,qBACjB,EAAC9B,YAAY,CAACyC,kBAAkB,CAAC,EAAE,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;MAAA,CAC3F,CACP;IAAA,CACe,CAAC,EAEnBxD,KAAA,CAACT,IAAI;MAACiD,KAAK,EAAEC,MAAM,CAACgB,aAAc;MAAAd,QAAA,GAChC7C,IAAA,CAACN,IAAI;QAAAmD,QAAA,EAAC;MAAoB,CAAM,CAAC,EACjC7C,IAAA,CAACP,IAAI;QAACiD,KAAK,EAAEC,MAAM,CAACiB,cAAe;QAAAf,QAAA,EAChChB,QAAQ,CAACgC,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;UAAA,OAC3B/D,IAAA,CAACH,MAAM;YAELmE,KAAK,EAAEF,OAAO,CAAChC,IAAK;YACpBgB,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMlB,kBAAkB,CAACkC,OAAO,CAAC;YAAA;UAAC,GAFtCC,KAGN,CAAC;QAAA,CACH;MAAC,CACE,CAAC,EACNpC,eAAe,IACdzB,KAAA,CAACR,IAAI;QAACgD,KAAK,EAAEC,MAAM,CAACW,gBAAiB;QAAAT,QAAA,GAAC,uBACf,EAAClB,eAAe,CAACG,IAAI,EACzC,IAAI,EAAC,gBAAW,EAACH,eAAe,CAACI,QAAQ,EACzC,IAAI,EAAC,WAAS,EAACJ,eAAe,CAACK,QAAQ;MAAA,CACpC,CACP;IAAA,CACG,CAAC,EAEPhC,IAAA,CAACH,MAAM;MACLmE,KAAK,EAAC,QAAQ;MACdlB,OAAO,EAAE,SAAAA,QAAA,EAAM;QAEb,IAAInB,eAAe,EAAE;UACnBsC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEvD,YAAY,CAAC4C,kBAAkB,CAAC,CAAC,CAAC;UACxDU,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEnD,YAAY,CAACyC,kBAAkB,CAAC,CAAC,CAAC;UACvDS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEvC,eAAe,CAACG,IAAI,CAAC;QAC9C;MACF;IAAE,CACH,CAAC;EAAA,CACE,CAAC;AAEX;AAEA,IAAMa,MAAM,GAAGhD,UAAU,CAACwE,MAAM,CAAC;EAC/BvB,SAAS,EAAE;IACTwB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDxB,SAAS,EAAE;IACTuB,UAAU,EAAE,QAAQ;IACpBE,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC;EACDrB,gBAAgB,EAAE;IAChBsB,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC;EACDlB,aAAa,EAAE;IACbW,UAAU,EAAE,QAAQ;IACpBE,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC;EACDf,cAAc,EAAE;IACdkB,aAAa,EAAE,KAAK;IACpBP,cAAc,EAAE,QAAQ;IACxBK,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}