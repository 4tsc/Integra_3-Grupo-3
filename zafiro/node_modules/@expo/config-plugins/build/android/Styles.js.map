<<<<<<< HEAD
{"version":3,"file":"Styles.js","names":["_Paths","data","require","_Resources","fallbackResourceString","readStylesXMLAsync","path","fallback","readResourcesXMLAsync","getProjectStylesXMLPathAsync","projectRoot","kind","getResourceXMLPathAsync","name","ensureDefaultStyleResourceXML","xml","_xml","_xml$resources","ensureDefaultResourceXML","Array","isArray","resources","style","getStyleParent","group","findResourceGroup","getStylesItem","parent","appTheme","item","existingItem","filter","$","head","setStylesItem","buildResourceGroup","push","_","removeStylesItem","index","findIndex","splice","getAppThemeLightNoActionBarGroup","assignStylesValue","add","value","targetApi","buildResourceItem","getStylesGroupAsObject","xmlGroup","getResourceItemsAsObject"],"sources":["../../src/android/Styles.ts"],"sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport {\n  buildResourceGroup,\n  buildResourceItem,\n  ensureDefaultResourceXML,\n  findResourceGroup,\n  getResourceItemsAsObject,\n  readResourcesXMLAsync,\n  ResourceGroupXML,\n  ResourceItemXML,\n  ResourceKind,\n  ResourceXML,\n} from './Resources';\n\n// Adds support for `tools:x`\nconst fallbackResourceString = `<?xml version=\"1.0\" encoding=\"utf-8\"?><resources xmlns:tools=\"http://schemas.android.com/tools\"></resources>`;\n\nexport async function readStylesXMLAsync({\n  path,\n  fallback = fallbackResourceString,\n}: {\n  path: string;\n  fallback?: string | null;\n}): Promise<ResourceXML> {\n  return readResourcesXMLAsync({ path, fallback });\n}\n\nexport async function getProjectStylesXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n): Promise<string> {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'styles' });\n}\n\nfunction ensureDefaultStyleResourceXML(xml: ResourceXML): ResourceXML {\n  xml = ensureDefaultResourceXML(xml);\n  if (!Array.isArray(xml?.resources?.style)) {\n    xml.resources.style = [];\n  }\n  return xml;\n}\n\nexport function getStyleParent(\n  xml: ResourceXML,\n  group: { name: string; parent?: string }\n): ResourceGroupXML | null {\n  return findResourceGroup(xml.resources.style, group);\n}\n\nexport function getStylesItem({\n  name,\n  xml,\n  parent,\n}: {\n  name: string;\n  xml: ResourceXML;\n  parent: { name: string; parent?: string };\n}): ResourceItemXML | null {\n  xml = ensureDefaultStyleResourceXML(xml);\n\n  const appTheme = getStyleParent(xml, parent);\n\n  if (!appTheme) {\n    return null;\n  }\n\n  if (appTheme.item) {\n    const existingItem = appTheme.item.filter(({ $: head }) => head.name === name)[0];\n\n    // Don't want to 2 of the same item, so if one exists, we overwrite it\n    if (existingItem) {\n      return existingItem;\n    }\n  }\n  return null;\n}\n\nexport function setStylesItem({\n  item,\n  xml,\n  parent,\n}: {\n  item: ResourceItemXML;\n  xml: ResourceXML;\n  parent: { name: string; parent: string };\n}): ResourceXML {\n  xml = ensureDefaultStyleResourceXML(xml);\n\n  let appTheme = getStyleParent(xml, parent);\n\n  if (!appTheme) {\n    appTheme = buildResourceGroup(parent);\n    xml.resources!.style!.push(appTheme);\n  }\n\n  if (appTheme.item) {\n    const existingItem = appTheme.item.filter(({ $: head }) => head.name === item.$.name)[0];\n\n    // Don't want to 2 of the same item, so if one exists, we overwrite it\n    if (existingItem) {\n      existingItem._ = item._;\n      existingItem.$ = item.$;\n    } else {\n      appTheme.item.push(item);\n    }\n  } else {\n    appTheme.item = [item];\n  }\n  return xml;\n}\n\nexport function removeStylesItem({\n  name,\n  xml,\n  parent,\n}: {\n  name: string;\n  xml: ResourceXML;\n  parent: { name: string; parent: string };\n}): ResourceXML {\n  xml = ensureDefaultStyleResourceXML(xml);\n  const appTheme = getStyleParent(xml, parent);\n  if (appTheme?.item) {\n    const index = appTheme.item.findIndex(({ $: head }: ResourceItemXML) => head.name === name);\n    if (index > -1) {\n      appTheme.item.splice(index, 1);\n    }\n  }\n  return xml;\n}\n\n// This is a very common theme so make it reusable.\nexport function getAppThemeLightNoActionBarGroup() {\n  return { name: 'AppTheme', parent: 'Theme.AppCompat.Light.NoActionBar' };\n}\n\nexport function assignStylesValue(\n  xml: ResourceXML,\n  {\n    add,\n    value,\n    targetApi,\n    name,\n    parent,\n  }: {\n    add: boolean;\n    value: string;\n    targetApi?: string;\n    name: string;\n    parent: { name: string; parent: string };\n  }\n): ResourceXML {\n  if (add) {\n    return setStylesItem({\n      xml,\n      parent,\n      item: buildResourceItem({\n        name,\n        targetApi,\n        value,\n      }),\n    });\n  }\n  return removeStylesItem({\n    xml,\n    parent,\n    name,\n  });\n}\n\n/**\n * Helper to convert a styles.xml parent's children into a simple k/v pair.\n * Added for testing purposes.\n *\n * @param xml\n * @returns\n */\nexport function getStylesGroupAsObject(\n  xml: ResourceXML,\n  group: { name: string; parent?: string }\n): Record<string, string> | null {\n  const xmlGroup = getStyleParent(xml, group);\n  return xmlGroup?.item ? getResourceItemsAsObject(xmlGroup.item) : null;\n}\n"],"mappings":"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"}
=======
{"version":3,"sources":["../../src/android/Styles.ts"],"names":["fallbackResourceString","readStylesXMLAsync","path","fallback","getProjectStylesXMLPathAsync","projectRoot","kind","name","ensureDefaultStyleResourceXML","xml","Array","isArray","resources","style","getStyleParent","group","getStylesItem","parent","appTheme","item","existingItem","filter","$","head","setStylesItem","push","_","removeStylesItem","index","findIndex","splice","getAppThemeLightNoActionBarGroup","assignStylesValue","add","value","targetApi","getStylesGroupAsObject","xmlGroup"],"mappings":"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","sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport {\n  buildResourceGroup,\n  buildResourceItem,\n  ensureDefaultResourceXML,\n  findResourceGroup,\n  getResourceItemsAsObject,\n  readResourcesXMLAsync,\n  ResourceGroupXML,\n  ResourceItemXML,\n  ResourceKind,\n  ResourceXML,\n} from './Resources';\n\n// Adds support for `tools:x`\nconst fallbackResourceString = `<?xml version=\"1.0\" encoding=\"utf-8\"?><resources xmlns:tools=\"http://schemas.android.com/tools\"></resources>`;\n\nexport async function readStylesXMLAsync({\n  path,\n  fallback = fallbackResourceString,\n}: {\n  path: string;\n  fallback?: string | null;\n}): Promise<ResourceXML> {\n  return readResourcesXMLAsync({ path, fallback });\n}\n\nexport async function getProjectStylesXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n): Promise<string> {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'styles' });\n}\n\nfunction ensureDefaultStyleResourceXML(xml: ResourceXML): ResourceXML {\n  xml = ensureDefaultResourceXML(xml);\n  if (!Array.isArray(xml?.resources?.style)) {\n    xml.resources.style = [];\n  }\n  return xml;\n}\n\nexport function getStyleParent(\n  xml: ResourceXML,\n  group: { name: string; parent?: string }\n): ResourceGroupXML | null {\n  return findResourceGroup(xml.resources.style, group);\n}\n\nexport function getStylesItem({\n  name,\n  xml,\n  parent,\n}: {\n  name: string;\n  xml: ResourceXML;\n  parent: { name: string; parent?: string };\n}): ResourceItemXML | null {\n  xml = ensureDefaultStyleResourceXML(xml);\n\n  const appTheme = getStyleParent(xml, parent);\n\n  if (!appTheme) {\n    return null;\n  }\n\n  if (appTheme.item) {\n    const existingItem = appTheme.item.filter(({ $: head }) => head.name === name)[0];\n\n    // Don't want to 2 of the same item, so if one exists, we overwrite it\n    if (existingItem) {\n      return existingItem;\n    }\n  }\n  return null;\n}\n\nexport function setStylesItem({\n  item,\n  xml,\n  parent,\n}: {\n  item: ResourceItemXML;\n  xml: ResourceXML;\n  parent: { name: string; parent: string };\n}): ResourceXML {\n  xml = ensureDefaultStyleResourceXML(xml);\n\n  let appTheme = getStyleParent(xml, parent);\n\n  if (!appTheme) {\n    appTheme = buildResourceGroup(parent);\n    xml.resources!.style!.push(appTheme);\n  }\n\n  if (appTheme.item) {\n    const existingItem = appTheme.item.filter(({ $: head }) => head.name === item.$.name)[0];\n\n    // Don't want to 2 of the same item, so if one exists, we overwrite it\n    if (existingItem) {\n      existingItem._ = item._;\n      existingItem.$ = item.$;\n    } else {\n      appTheme.item.push(item);\n    }\n  } else {\n    appTheme.item = [item];\n  }\n  return xml;\n}\n\nexport function removeStylesItem({\n  name,\n  xml,\n  parent,\n}: {\n  name: string;\n  xml: ResourceXML;\n  parent: { name: string; parent: string };\n}): ResourceXML {\n  xml = ensureDefaultStyleResourceXML(xml);\n  const appTheme = getStyleParent(xml, parent);\n  if (appTheme?.item) {\n    const index = appTheme.item.findIndex(({ $: head }: ResourceItemXML) => head.name === name);\n    if (index > -1) {\n      appTheme.item.splice(index, 1);\n    }\n  }\n  return xml;\n}\n\n// This is a very common theme so make it reusable.\nexport function getAppThemeLightNoActionBarGroup() {\n  return { name: 'AppTheme', parent: 'Theme.AppCompat.Light.NoActionBar' };\n}\n\nexport function assignStylesValue(\n  xml: ResourceXML,\n  {\n    add,\n    value,\n    targetApi,\n    name,\n    parent,\n  }: {\n    add: boolean;\n    value: string;\n    targetApi?: string;\n    name: string;\n    parent: { name: string; parent: string };\n  }\n): ResourceXML {\n  if (add) {\n    return setStylesItem({\n      xml,\n      parent,\n      item: buildResourceItem({\n        name,\n        targetApi,\n        value,\n      }),\n    });\n  }\n  return removeStylesItem({\n    xml,\n    parent,\n    name,\n  });\n}\n\n/**\n * Helper to convert a styles.xml parent's children into a simple k/v pair.\n * Added for testing purposes.\n *\n * @param xml\n * @returns\n */\nexport function getStylesGroupAsObject(\n  xml: ResourceXML,\n  group: { name: string; parent?: string }\n): Record<string, string> | null {\n  const xmlGroup = getStyleParent(xml, group);\n  return xmlGroup?.item ? getResourceItemsAsObject(xmlGroup.item) : null;\n}\n"],"file":"Styles.js"}
>>>>>>> apetey
